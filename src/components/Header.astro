---
import Logo from "./Logo.astro"
---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40"
>
  <div class="flex flex-grow basis-0">
    <a href="./"><Logo /></a>
  </div>

  <nav class="hidden xl:block sm:hidden">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#model-s">Model S</a></li>
      <li><a href="#model-3">Model 3</a></li>
      <li><a href="#model-x">Model X</a></li>
      <li><a href="#model-y">Model Y</a></li>
      <li><a href="#powerwall">Powerwall</a></li>
      <li><a href="#accesorios">Carga</a></li>
    </ul>
  </nav>

  <nav class="flex flex-grow justify-end basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li class="hidden xl:block sm:hidden"><a href="#"><svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-help"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" /><path d="M12 17l0 .01" /><path d="M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4" /></svg></a></li>
      <li class="hidden xl:block sm:hidden"><a href="#"><svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-world"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" /><path d="M3.6 9h16.8" /><path d="M3.6 15h16.8" /><path d="M11.5 3a17 17 0 0 0 0 18" /><path d="M12.5 3a17 17 0 0 1 0 18" /></svg></a></li>
      <li><a id="menu-btn" href="#"><svg  xmlns="http://www.w3.org/2000/svg"  width="24"  height="24"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-menu-3"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M10 6h10" /><path d="M4 12h16" /><path d="M7 12h13" /><path d="M4 18h10" /></svg></a></li>
    </ul>
  </nav>

  <!-- <nav id="modal-menu" class="xl:hidden flex flex-col bg-white fixed top-0 left-0 right-0 bottom-0 ">
    <button id="close-btn" class=" w-screen flex justify-end p-5">
      <img  class="text-black h-6 " src="/close-icon.svg" alt="close image">
    </button>
      <ul
      class="flex flex-col mt-4 [&>li>a]:transition-colors [&>li]:m-3  [&>li>a]:flex [&>li>a]:justify-between [&>li>a]:duration-200 [&>li>a]:text-black [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-6 [&>li>a]:py-3 [&>li>a]:rounded-md [&>li>a]:w-full"
      >
        <li><a class="hover:bg-slate-100" href="#home"> Home <img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a> </li>
        <li><a class="hover:bg-slate-100" href="#model-s">Model S<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
        <li><a class="hover:bg-slate-100" href="#model-3">Model 3<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
        <li><a class="hover:bg-slate-100" href="#model-x">Model X<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
        <li><a class="hover:bg-slate-100" href="#model-y">Model Y<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
        <li><a class="hover:bg-slate-100" href="#powerwall">Powerwall<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
        <li><a class="hover:bg-slate-100" href="#accesorios">Carga<img class="h-5" alt="arrow icon" src="/arrow-icon.svg"></a></li>
    </ul>
  </nav> -->

  <div
    id="menu-backdrop"
    class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
  >
  </div>
</header>

<!-- <script >
  const menuBtn = document.getElementById('menu-btn');
  const modalMenu = document.querySelector("#modal-menu")
  const menuItems = modalMenu.querySelectorAll('li>a ');
  const closeBtn = document.querySelector("#close-btn")
  
  function toggleDropdownMenu() {
    modalMenu.classList.toggle('hidden');
  }


  menuBtn.addEventListener('click',toggleDropdownMenu)

  closeBtn.addEventListener('click',toggleDropdownMenu)

  menuItems.forEach(Item => {
    Item.addEventListener('click',toggleDropdownMenu);
});



</script> -->


<script>
  const listItem = document.querySelectorAll("#landing-header li")
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect()

      menuBackDrop.style.setProperty("--left", `${left}px`)
      menuBackDrop.style.setProperty("--top", `${top}px`)
      menuBackDrop.style.setProperty("--width", `${width}px`)
      menuBackDrop.style.setProperty("--height", `${height}px`)

      menuBackDrop.style.opacity = "1"
      menuBackDrop.style.visibility = "visible"
    })

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0"
      menuBackDrop.style.visibility = "hidden"
    })
  })
</script>

<script>
  const headerEl = document.querySelector("#landing-header") as HTMLElement

  const observerOptions = {
    root: null,
    rootMargin: "0px", // en cuanto se vea el elemento
    threshold: 0.9, // porcentaje de visibilidad
  }

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color")
        headerEl.style.color = color
      }
    })
  }, observerOptions)

  const sectionElements = document.querySelectorAll(".landing-section")
  sectionElements.forEach((section) => observer.observe(section))
</script>